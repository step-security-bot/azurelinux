Use umask() to Constrain Created File Permissions

Signed-off-by: Henry Beberman <henry.beberman@microsoft.com>

diff -Naur a/src/zstd/programs/fileio.c b/src/zstd/programs/fileio.c
--- a/src/zstd/programs/fileio.c	2020-05-22 05:04:00.000000000 +0000
+++ b/src/zstd/programs/fileio.c	2024-05-08 21:47:49.022437794 +0000
@@ -611,14 +611,11 @@
             FIO_remove(dstFileName);
     }   }
 
-    {   FILE* const f = fopen( dstFileName, "wb" );
+    {   const int old_umask = UTIL_umask(0177); /* u-x,go-rwx */
+        FILE* const f = fopen( dstFileName, "wb" );
+        UTIL_umask(old_umask);
         if (f == NULL) {
             DISPLAYLEVEL(1, "zstd: %s: %s\n", dstFileName, strerror(errno));
-        } else if (srcFileName != NULL
-               && strcmp (srcFileName, stdinmark)
-               && strcmp(dstFileName, nulmark) ) {
-            /* reduce rights on newly created dst file while compression is ongoing */
-            UTIL_chmod(dstFileName, 00600);
         }
         return f;
     }
diff -Naur a/src/zstd/programs/util.c b/src/zstd/programs/util.c
--- a/src/zstd/programs/util.c	2020-05-22 05:04:00.000000000 +0000
+++ b/src/zstd/programs/util.c	2024-05-08 21:48:42.615068035 +0000
@@ -137,6 +137,15 @@
     return chmod(filename, permissions);
 }
 
+int UTIL_umask(int mode) {
+#if PLATFORM_POSIX_VERSION > 0
+    return umask(mode);
+#else
+    /* do nothing, fake return value */
+    return mode;
+#endif
+}
+
 int UTIL_setFileStat(const char *filename, stat_t *statbuf)
 {
     int res = 0;
diff -Naur a/src/zstd/programs/util.h b/src/zstd/programs/util.h
--- a/src/zstd/programs/util.h	2020-05-22 05:04:00.000000000 +0000
+++ b/src/zstd/programs/util.h	2024-05-08 21:50:01.135938005 +0000
@@ -22,7 +22,7 @@
 #include "platform.h"     /* PLATFORM_POSIX_VERSION, ZSTD_NANOSLEEP_SUPPORT, ZSTD_SETPRIORITY_SUPPORT */
 #include <stddef.h>       /* size_t, ptrdiff_t */
 #include <sys/types.h>    /* stat, utime */
-#include <sys/stat.h>     /* stat, chmod */
+#include <sys/stat.h>     /* stat, chmod, umask */
 #include "../lib/common/mem.h"          /* U64 */
 
 
@@ -119,6 +119,7 @@
 int UTIL_getFileStat(const char* infilename, stat_t* statbuf);
 int UTIL_setFileStat(const char* filename, stat_t* statbuf);
 int UTIL_chmod(char const* filename, mode_t permissions);   /*< like chmod, but avoid changing permission of /dev/null */
+int UTIL_umask(int mode);
 int UTIL_compareStr(const void *p1, const void *p2);
 const char* UTIL_getFileExtension(const char* infilename);
 
